#summary Work Contexts provide persistent data needed for workers
#labels Phase-Implementation

= Introduction =

Worker classes derived from WorkLib:AbstractWorker
have a short lifespan.
They are created, provided with a current configuration
and input data and are expected to provide results
then fizzle into history. 

The worker machine maintains in-memory work contexts for use
by its workers.
They are basically read only, but a few circumstances
call for writing to a context.
These will be discussed below followed by example
contexts noting each one's characteristic.

= Characteristics =

|| *CharCode* || *Name* || *Description* ||
|| FixedRO || Fixed Read Only || Will not change during the life of machine ||
|| SubRO || Subscriber Read Only || Worker will not change; machine may change based upon message from Publisher ||
|| PubWO || Publisher Write Only || TBD whether these will be contexts ||
|| Mirror || Publisher's Mirror ||  TBD whether these will be contexts ||
|| Update || Periodic Update Read/Write || Statistics collector (See Note 1 for example) ||
|| Reversed || Reversed Write/Read || Worker writes, machine reads and forwards ||

= Contexts =

== INDI 2nd Generation ==

|| *CharCode* || *Description* || *Characteristic CharCode* ||
|| Vectors || Vector sets for face matching || SubRO ||
|| EnrIBase || Enrollment keys and INDIbase write cache (Note 2) || PubWO ||
|| EnrIMage || Image keys and INDIbase write cache (Note 2 also) || PubWO ||
|| IfLayers || INDIface layers || FixedRO ||
|| PerfStat || Performance Statistics || Update ||
|| LogFork || Write cache feeding cloud-based logging facility || Reversed ||

= Notes =

1. Example for Update contexts: Gathering frame performance statistics.


2. Multiple databases machines can write to the same database by segmenting 
the keys allocated to each writer machine.
